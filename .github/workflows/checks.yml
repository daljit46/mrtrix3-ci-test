name: Checks

on:
  push:
  pull_request:
    types: [opened, synchronize]
    branches: [ master, dev]
    merge_group:
      types: [checks_requested]
      branches: [master]
      
jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: [g++, clang++]
    defaults:
      run:
        shell: msys2 {0}

    env:
      CHERE_INVOKING: enabled_from_arguments
      MINGW_PACKAGE_PREFIX: mingw-w64-ucrt-x86_64
      SCCACHE_GHA_ENABLED: "true"
      SCCACHE_CACHE_SIZE: "2G"
      SCCACHE_DIR: ${{ github.workspace }}/.sccache

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          release: false
          install: |
            git
            python
            ${{env.MINGW_PACKAGE_PREFIX}}-bc
            ${{env.MINGW_PACKAGE_PREFIX}}-cmake
            ${{env.MINGW_PACKAGE_PREFIX}}-diffutils
            ${{env.MINGW_PACKAGE_PREFIX}}-eigen3
            ${{env.MINGW_PACKAGE_PREFIX}}-fftw
            ${{env.MINGW_PACKAGE_PREFIX}}-gcc
            ${{env.MINGW_PACKAGE_PREFIX}}-clang
            ${{env.MINGW_PACKAGE_PREFIX}}-lld
            ${{env.MINGW_PACKAGE_PREFIX}}-libtiff
            ${{env.MINGW_PACKAGE_PREFIX}}-ninja
            ${{env.MINGW_PACKAGE_PREFIX}}-pkg-config
            ${{env.MINGW_PACKAGE_PREFIX}}-qt6-base
            ${{env.MINGW_PACKAGE_PREFIX}}-qt6-svg
            ${{env.MINGW_PACKAGE_PREFIX}}-zlib
     
      - name: configure
        run: >
            cmake
            -B build
            -G Ninja
            -D CMAKE_BUILD_TYPE=Release
            -D CMAKE_CXX_COMPILER=${{matrix.compiler}}
            -D CMAKE_LINKER_TYPE=LLD
            -D MRTRIX_BUILD_TESTS=ON
            -D MRTRIX_STL_DEBUGGING=ON
            -D MRTRIX_WARNINGS_AS_ERRORS=ON

      - name: build
        run: cmake --build build
