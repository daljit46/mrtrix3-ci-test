name: Build

on:
  push:
  workflow_dispatch:
      
jobs:
  linux-clang-build:
    runs-on: ubuntu-20.04

    env:
      SCCACHE_GHA_ENABLED: "true"
      SCCACHE_CACHE_SIZE: "2G"

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: install dependencies
      run: | 
        sudo apt install cmake \
        autoconf-archive \
        '^libxcb.*-dev' \
        libxkbcommon-dev \
        libx11-xcb-dev \
        libglu1-mesa-dev \
        libxrender-dev \
        libxi-dev \
        libxkbcommon-dev \
        libxkbcommon-x11-dev \
        libegl1-mesa-dev \
        ninja-build \
        python3 \
        libeigen3-dev \
        zlib1g-dev \
        libfftw3-dev \
        libtiff5-dev \
        libpng-dev

    - name: Install Clang 17
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'linux'
        arch: 'gcc_64'
        cache-key-prefix: 'install-qt-action'
        set-env: 'true'
        dir: ~/.qtinstall
    # - name: Cache Qt
    #   id: cache-qt
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/.qtinstall
    #     key: qt

    # - name: Setup Qt sources
    #   if: steps.cache-qt.outputs.cache-hit != 'true'
    #   run: |
    #     git clone git://code.qt.io/qt/qt5.git qt6
    #     cd qt6 && git checkout 6.5.3
    #     ./init-repository --module-subset=qtbase,qtsvg
    #     ./configure -list-features

    # - name: Configure Qt
    #   if: steps.cache-qt.outputs.cache-hit != 'true'
    #   run: >
    #     cd qt6 &&
    #     cmake
    #     -B build
    #     -G Ninja
    #     -D CMAKE_BUILD_TYPE=Release
    #     -D CMAKE_C_COMPILER=clang-17
    #     -D CMAKE_CXX_COMPILER=clang++-17
    #     -D CMAKE_C_COMPILER_LAUNCHER=sccache
    #     -D CMAKE_CXX_COMPILER_LAUNCHER=sccache
    #     -D QT_BUILD_TESTS=OFF
    #     -D QT_BUILD_EXAMPLES=OFF
    #     -D QT_BUILD_SUBMODULES="qtbase;qtsvg"

    # - name: Build Qt
    #   if: steps.cache-qt.outputs.cache-hit != 'true'
    #   run: cmake --build qt6/build --verbose
  
    # - name: Install Qt
    #   if: steps.cache-qt.outputs.cache-hit != 'true'
    #   run: sudo cmake --install qt6/build --prefix ~/.qtinstall

    - name: Print CMake version
      run: cmake --version

    - name: configure
      run: >
        cmake
        -B build
        -G Ninja
        -D CMAKE_CXX_COMPILER=clang++-17
        -D CMAKE_BUILD_TYPE=Release
        -D CMAKE_PREFIX_PATH=~/.qtinstall/Qt/6.5.3/gcc_64
        -D MRTRIX_USE_QT6=ON

    - name: build
      run: cmake --build build

    - name: install
      run: cmake --install build --prefix ./mrtrix3_install

    - name: Run linuxdeploy
      run: |
        wget "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
        wget "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
        chmod +x ./linuxdeploy-x86_64.AppImage
        chmod +x ./linuxdeploy-plugin-qt-x86_64.AppImage
        mkdir appdir && mkdir appdir/usr
        cp -r mrtrix3_install/* appdir/usr
        export DEBUG=1
        export QMAKE=$HOME/.qtinstall/Qt/6.5.3/gcc_64/bin/qmake6
        $QMAKE --version
        ./linuxdeploy-x86_64.AppImage --appdir appdir --plugin qt --verbosity=0
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mrtrix3
        path: ${{ github.workspace }}/appdir/usr