name: Build

on:
  push:
  workflow_dispatch:
      
jobs:
  linux-clang-build:
    runs-on: ubuntu-20.04

    env:
      SCCACHE_GHA_ENABLED: "true"
      SCCACHE_CACHE_SIZE: "2G"

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: install dependencies
      run: | 
        sudo apt install cmake \
        autoconf-archive \
        '^libxcb.*-dev' \
        libxkbcommon-dev \
        libx11-xcb-dev \
        libglu1-mesa-dev \
        libxrender-dev \
        libxi-dev \
        libxkbcommon-dev \
        libxkbcommon-x11-dev \
        libegl1-mesa-dev \
        ninja-build

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Clone vcpkg
      run: git clone https://github.com/microsoft/vcpkg.git

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        vcpkgGitCommitId: 53bef8994c541b6561884a8395ea35715ece75db

    - name: Setup Qt sources
      run: |
        git clone git://code.qt.io/qt/qt5.git qt6
        cd qt6 && git checkout 6.6.1
        ./init-repository --module-subset=qtbase,qtsvg
        ./configure -list-features

    - name: Configure Qt
      run: >
        cd qt6 &&
        cmake
        -B build
        -G Ninja
        -D CMAKE_BUILD_TYPE=Release
        -D CMAKE_C_COMPILER_LAUNCHER=sccache
        -D CMAKE_CXX_COMPILER_LAUNCHER=sccache
        -D QT_BUILD_TESTS=OFF
        -D QT_BUILD_EXAMPLES=OFF
        -D QT_BUILD_SUBMODULES="qtbase;qtsvg"
        -D BUILD_SHARED_LIBS=OFF

    - name: Build Qt
      run: cmake --build qt6/build --verbose
  
    - name: Install Qt
      run: sudo cmake --install qt6/build --prefix ~/.qtinstall

    - name: Print CMake version
      run: cmake --version

    - name: configure
      run: >
        cmake
        -B build
        -G Ninja
        -D CMAKE_BUILD_TYPE=Release
        -D CMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake
        -D CMAKE_PREFIX_PATH=~/.qtinstall

    - name: build
      run: cmake --build build

    - name: install
      run: cmake --install build --prefix ./mrtrix3_install

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mrtrix3
        path: ${{ github.workspace }}/install

    - name: Upload GitHub Actions artifacts of vcpkg logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: vcpkg-logs-${{ github.sha }}
        path: |
          ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
          ${{ github.workspace }}/build/vcpkg-bootstrap.log
          ${{ github.workspace }}/build/vcpkg-manifest-install.log
          ${{ github.workspace }}/build/vcpkg_installed/vcpkg/issue_body.md
        if-no-files-found: ignore